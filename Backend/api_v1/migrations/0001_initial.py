# Generated by Django 5.1.7 on 2025-08-06 16:13

import api_v1.models
import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Centre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('address', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CharteredEngineerFee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fee_amount', models.DecimalField(decimal_places=2, default=15000, help_text='Total fee including GST.', max_digits=10)),
                ('gst_percentage', models.DecimalField(decimal_places=2, default=18, help_text='GST percent included in fee_amount.', max_digits=5)),
            ],
        ),
        migrations.CreateModel(
            name='QualificationType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('application_id', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('membership_id', models.CharField(blank=True, max_length=15, null=True, unique=True)),
                ('title', models.CharField(blank=True, help_text="e.g. 'Mr.', 'Ms.', 'Dr.', etc.", max_length=50, null=True)),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
                ('middle_name', models.CharField(blank=True, max_length=50, null=True)),
                ('last_name', models.CharField(blank=True, max_length=50, null=True)),
                ('mobile_number', models.CharField(blank=True, max_length=20)),
                ('landline_no', models.CharField(blank=True, max_length=25, null=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('gender', models.CharField(blank=True, max_length=10, null=True)),
                ('address1', models.CharField(blank=True, max_length=255, null=True, verbose_name='Address Line 1')),
                ('address2', models.CharField(blank=True, max_length=255, null=True, verbose_name='Address Line 2')),
                ('address3', models.CharField(blank=True, max_length=255, null=True, verbose_name='Address Line 3')),
                ('highest_qualification', models.CharField(blank=True, max_length=200, null=True)),
                ('pincode', models.CharField(blank=True, max_length=7, null=True)),
                ('father_name', models.CharField(blank=True, max_length=200, null=True)),
                ('mother_name', models.CharField(blank=True, max_length=200, null=True)),
                ('spouse_name', models.CharField(blank=True, max_length=50, null=True)),
                ('from_india', models.BooleanField(default=True)),
                ('country', models.CharField(blank=True, max_length=50, null=True)),
                ('state', models.CharField(blank=True, max_length=50, null=True)),
                ('city', models.CharField(blank=True, max_length=50, null=True)),
                ('total_experience', models.FloatField(blank=True, null=True)),
                ('remarks', models.CharField(blank=True, max_length=200, null=True)),
                ('eligibility', models.TextField(blank=True, null=True)),
                ('payment_details', models.JSONField(blank=True, null=True)),
                ('user_image', models.ImageField(blank=True, null=True, upload_to='users/images/')),
                ('is_active', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('exposure', models.BooleanField(default=False)),
                ('electronics_experience', models.BooleanField(default=False)),
                ('area_of_specialization', models.TextField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('centre', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='users', to='api_v1.centre')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ApplicationVerificationStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('personal_details', models.BooleanField(default=False)),
                ('qualification', models.BooleanField(default=False)),
                ('experience', models.BooleanField(default=False)),
                ('proposer', models.BooleanField(default=False)),
                ('membership', models.BooleanField(default=False)),
                ('documents', models.BooleanField(default=False)),
                ('payment', models.BooleanField(default=False)),
                ('eligibility', models.BooleanField(default=False)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ApproveMembership',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
                ('approved', models.BooleanField(default=False)),
                ('rejected', models.BooleanField(default=False)),
                ('remark', models.TextField(blank=True, null=True)),
                ('applicant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='membership_application', to=settings.AUTH_USER_MODEL)),
                ('approved_by', models.ManyToManyField(related_name='approved_memberships', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AuditLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('action', models.CharField(max_length=20)),
                ('model_name', models.CharField(blank=True, max_length=100, null=True)),
                ('object_id', models.CharField(blank=True, max_length=100, null=True)),
                ('method', models.CharField(default='SYSTEM', max_length=10)),
                ('path', models.CharField(default='/', max_length=255)),
                ('request_id', models.CharField(blank=True, max_length=100, null=True)),
                ('changes', models.JSONField(default=dict)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='ConfigSetting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=100, null=True)),
                ('type', models.CharField(max_length=100, null=True)),
                ('approval_prsnt', models.DecimalField(decimal_places=2, max_digits=10)),
                ('heirarchy', models.BooleanField(default=False)),
                ('value', models.JSONField(blank=True, default=dict, null=True)),
                ('approval_user', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('aadhar_front', models.FileField(blank=True, null=True, upload_to='documents/aadhar/front/', verbose_name='Aadhar Front')),
                ('aadhar_back', models.FileField(blank=True, null=True, upload_to='documents/aadhar/back/', verbose_name='Aadhar Back')),
                ('passport', models.FileField(blank=True, null=True, upload_to='documents/passport/', verbose_name='Passport')),
                ('profile_photo', models.FileField(blank=True, null=True, upload_to='documents/profile_photo/', verbose_name='Profile Photo')),
                ('signature', models.FileField(blank=True, null=True, upload_to='documents/signature/', verbose_name='Signature')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='document', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Experience',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('organization_name', models.CharField(blank=True, max_length=255, null=True)),
                ('employee_type', models.CharField(blank=True, max_length=50, null=True)),
                ('job_title', models.CharField(blank=True, max_length=255, null=True)),
                ('currently_working', models.BooleanField(blank=True, default=False, null=True)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('work_type', models.CharField(blank=True, max_length=50, null=True)),
                ('total_experience', models.CharField(blank=True, max_length=30, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='experiences', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ISFMembership',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('membership_type', models.CharField(help_text="e.g. 'ISF Membership'", max_length=50)),
                ('year', models.PositiveIntegerField()),
                ('fee_amount', models.DecimalField(decimal_places=2, help_text='Fee for that year (incl. GST).', max_digits=10)),
                ('currency', models.CharField(default='INR', help_text='Currency code.', max_length=5)),
                ('gst_percentage', models.DecimalField(decimal_places=2, default=18, help_text='GST percent included in fee_amount.', max_digits=5)),
            ],
            options={
                'unique_together': {('membership_type', 'year')},
            },
        ),
        migrations.CreateModel(
            name='MembershipFee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('membership_type', models.CharField(help_text="e.g. 'Fellow', 'Member', 'Associate Member', etc.", max_length=50)),
                ('min_age', models.PositiveSmallIntegerField(blank=True, help_text='Inclusive lower‐age bound.  Leave blank for no lower bound.', null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('max_age', models.PositiveSmallIntegerField(blank=True, help_text='Inclusive upper‐age bound.  Leave blank for no upper bound.', null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('fee_amount', models.DecimalField(decimal_places=2, help_text='Total fee including GST.', max_digits=10)),
                ('currency', models.CharField(default='INR', help_text="Currency code, e.g. 'INR' or 'USD'.", max_length=5)),
                ('is_foreign_member', models.BooleanField(default=False, help_text='If True, applies to all ages (ignore min/max).')),
                ('gst_percentage', models.DecimalField(decimal_places=2, default=18, help_text='GST percent included in fee_amount.', max_digits=5)),
                ('experience', models.FloatField(blank=True, help_text='Experience in years. Leave blank if not applicable.', null=True)),
            ],
            options={
                'unique_together': {('membership_type', 'min_age', 'max_age', 'is_foreign_member')},
            },
        ),
        migrations.AddField(
            model_name='user',
            name='membership_fee',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api_v1.membershipfee'),
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('message', models.TextField()),
                ('is_read', models.BooleanField(default=False)),
                ('delivered', models.BooleanField(default=False)),
                ('delivered_at', models.DateTimeField(blank=True, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('sender', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sent_notifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('membership_type', models.CharField(blank=True, max_length=50, null=True)),
                ('order_id', models.CharField(max_length=100)),
                ('payment_id', models.CharField(blank=True, max_length=255, null=True)),
                ('receipt', models.CharField(max_length=100)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('currency', models.CharField(default='INR', max_length=5)),
                ('is_bank_verified', models.BooleanField(default=False, help_text='Indicates if the payment has been verified by the bank.')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('paid', 'Paid'), ('success', 'Success'), ('refunded', 'Refunded')], default='Pending', max_length=20)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Proposer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('membership_no', models.CharField(max_length=50)),
                ('mobile_no', models.BigIntegerField()),
                ('email', models.EmailField(max_length=254)),
                ('status', models.CharField(blank=True, choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('expired', 'Expired')], default='pending', max_length=10, null=True)),
                ('token', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('expiry_date', models.DateTimeField(default=api_v1.models.default_expiry_date)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='proposer', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='QualificationBranch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('qualification_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='branches', to='api_v1.qualificationtype')),
            ],
            options={
                'unique_together': {('qualification_type', 'name')},
            },
        ),
        migrations.CreateModel(
            name='Qualification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('institute_name', models.CharField(blank=True, max_length=255, null=True)),
                ('board_university', models.CharField(blank=True, max_length=255, null=True)),
                ('year_of_passing', models.PositiveIntegerField()),
                ('percentage_cgpa', models.CharField(max_length=20)),
                ('document', models.FileField(upload_to='documents/qualifications/')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='qualifications', to=settings.AUTH_USER_MODEL)),
                ('qualification_branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api_v1.qualificationbranch')),
                ('qualification_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api_v1.qualificationtype')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('group', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='auth.group')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_roles', to='api_v1.role')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='user',
            name='role',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='roles', to='api_v1.role'),
        ),
        migrations.CreateModel(
            name='SubCentre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('centre', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subcentres', to='api_v1.centre')),
            ],
            options={
                'unique_together': {('centre', 'name')},
            },
        ),
        migrations.AddField(
            model_name='user',
            name='sub_centre',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='users', to='api_v1.subcentre'),
        ),
        migrations.CreateModel(
            name='TransferFee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fee_amount', models.DecimalField(decimal_places=2, help_text='Transfer subscription fee (incl. GST).', max_digits=10)),
                ('gst_percentage', models.DecimalField(decimal_places=2, default=18, help_text='GST percent included in fee_amount.', max_digits=5)),
                ('transfer_from', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transfers_from', to='api_v1.membershipfee')),
                ('transfer_to', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transfers_to', to='api_v1.membershipfee')),
            ],
        ),
    ]
